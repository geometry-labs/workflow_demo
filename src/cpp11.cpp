// Generated by cpp11: do not edit by hand
// clang-format off

#include <cpp11/R.hpp>
#include <Rcpp.h>
using namespace Rcpp;
#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// code.cpp
void fun();
extern "C" SEXP _RcppTest3_fun() {
  BEGIN_CPP11
    fun();
    return R_NilValue;
  END_CPP11
}
// cpp11_nested_loops.cpp
doubles_matrix<> cpp11_nested_loops(const doubles_matrix<>& x, const integers_matrix<>& y);
extern "C" SEXP _RcppTest3_cpp11_nested_loops(SEXP x, SEXP y) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp11_nested_loops(cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(x), cpp11::as_cpp<cpp11::decay_t<const integers_matrix<>&>>(y)));
  END_CPP11
}

extern "C" {
/* .Call calls */
extern SEXP _RcppTest3_rcpp_hello_world();
extern SEXP _RcppTest3_rcpp_nested_loops(SEXP, SEXP);
extern SEXP _RcppTest3_rcpp_parallel_nested_loops(SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_RcppTest3_cpp11_nested_loops",         (DL_FUNC) &_RcppTest3_cpp11_nested_loops,         2},
    {"_RcppTest3_fun",                        (DL_FUNC) &_RcppTest3_fun,                        0},
    {"_RcppTest3_rcpp_hello_world",           (DL_FUNC) &_RcppTest3_rcpp_hello_world,           0},
    {"_RcppTest3_rcpp_nested_loops",          (DL_FUNC) &_RcppTest3_rcpp_nested_loops,          2},
    {"_RcppTest3_rcpp_parallel_nested_loops", (DL_FUNC) &_RcppTest3_rcpp_parallel_nested_loops, 2},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_RcppTest3(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
